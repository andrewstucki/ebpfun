## template: jinja
#cloud-config

# Necessary to merge multiple entries across cloud config files
merge_how:
  - name: list
    settings: [append]
  - name: dict
    settings: [no_replace, recurse_list]

# Add users to the system. Users are added after groups are added.
users:
  - default
  - name: envoy
    # Create user as system user with no home directory
    system: true
    # Do not initialize lastlog and faillog for user
    no_log_init: true
    # Disable SSH logins for this user
    ssh_redirect_user: true

# Add HashiCorp and GetEnvoy package repos
{% if v1.variant == 'ubuntu' -%}
apt:
  preserve_sources_list: true
  sources:
    hashicorp_linux_repo:
      source: deb [arch=amd64] https://apt.releases.hashicorp.com focal main
      # Retrieved from https://www.hashicorp.com/security
      keyid: DA418C88A3219F7B
    getenvoy_repo:
      source: deb [arch=amd64] https://deb.dl.getenvoy.io/public/deb/ubuntu jammy main
      # Retrieved from curl -sL 'https://deb.dl.getenvoy.io/public/gpg.8115BA8E629CC074.key'
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----
        Version: GnuPG v2

        mQGNBGB3BbgBDAC/UUHAjsA6eo9TCnMu1Owl4griISUjAqXPw0WRVBaeFnXf6Dzb
        /o8/oekohX1mJ4MCDKydp+VDTsWMcqdRM2NVyO5ZfK3dF+HITm3UJVwaJAXxmigM
        eE2lbNTtvYEQVHcoNS/8NtWdAmXt0Oy9sGlzy7Ehqpj0xSboWE7xkDicTY7e4fJe
        zFZd0B8juEWfo0gYkrZ9O8cWFPR68nCroedR3Zmira/1CqmNJyCSZZs9KK+aPJDG
        FhsWM1pJKEBVhWZ1ALqBEz4LpynTX6/s9tcVgTkYrpgmaUxKL9De/ZapyKUIMwmz
        wAQjtQxCbKpI9XOnzjjmBNinEVJJAcKj/SdhZTYoMAzxN+uePxEoLyyJBVjjNWng
        1/cYYr3wo9veNU3j0f8lhim6j2J9d8Pvpy+2wXpj7Kyvsp11U8lbyIZYeTTYz3rR
        ZOK+nkfDuPv4Jghk4Q92hSZnkkbLAt1qM6YuLkcsMwGYm7oiIr0qSaD7H1uhx7yl
        OWe+oLyG7hkDvA0AEQEAAbRBQ2xvdWRzbWl0aCBQYWNrYWdlICh0ZXRyYXRlL2dl
        dGVudm95LWRlYikgPHN1cHBvcnRAY2xvdWRzbWl0aC5pbz6JAbcEEwEIACEFAmB3
        BbgCGy8FCwkIBwMFFQoJCAsFFgIDAQACHgECF4AACgkQgRW6jmKcwHRTZwwAr5Ft
        v+8gzwWFsvYcKassTUu3tiq9cwya3TtcGT/JDuf3P2u+bn6eeqqsENaOzsgUqXds
        GohQey3XMlVrHnQENOQwBtF2QLAlWBmkNGN//50Z0yAvXnlAbgw+B3hJI8f/3Q6U
        TSbISxGqAhvCkluht9Tufn5KTVdB4chBjeUuuipjeOX575SHJ+A+W+ht23Pkbdei
        ssY5RRG5+7rFc3rzBLOpJV6XLnBfoOMJGJv3x4Psslw7EAy4UEQW/WU7xV1pEj8X
        MwWX5pHb/tZZDWAcZwno7yGK6FDaSVFtNNlIQ1mBXpdoCgzWSgvmsMRjf8AY3Amz
        3VR0nSXqduEFfdcaqniUXwqDF0dX12/kJtgjzOgkKyYTGo/n/VY4zC7jXzajUEky
        /lOzhwyLeibkKm88HsJdbMf3Fo+2BYLGL0VYHTANXyguDionYePa2nPqqEP5U5/t
        huAQ/FuGXuMe7rHjXspvZ8tJdbKXCsHB+deZC0E3nwHZZAB3jjZKGjY8a67P
        =ldE4
        -----END PGP PUBLIC KEY BLOCK-----
{% else %}
# This must be CentOS
yum_repos:
  # Retrieved from https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
  hashicorp:
    name: HashiCorp Stable - $basearch
    baseurl: https://rpm.releases.hashicorp.com/RHEL/$releasever/$basearch/stable
    enabled: true
    gpgcheck: true
    gpgkey: https://rpm.releases.hashicorp.com/gpg
  tetrate-getenvoy-stable:
    name: Tetrate GetEnvoy - Stable
    baseurl: https://rpm.dl.getenvoy.io/public/rpm/el/8/$basearch
    enabled: true
    gpgcheck: true
    gpgkey: https://rpm.dl.getenvoy.io/public/gpg.CF716AF503183491.key
    repo_gpgcheck: true
    sslverify: 1
    sslcacert: /etc/pki/tls/certs/ca-bundle.crt
    metadata_expire: 300
{%- endif %}

package_update: true
packages:
  - jq
  - unzip
{% if v1.variant == 'ubuntu' %}
  - [consul, 1.10.0]
  - [getenvoy-envoy, 1.18.2.p0.gd362e79-1p75.g76c310e]
{% else %}
  - [consul, 1.10.0-1]
  - [getenvoy-envoy, 1.18.2.p0.gd362e79-1p75.g76c310e]
{%- endif %}

{% if 'variant' not in v1 -%}
ssh:
  emit_keys_to_console: false
no_ssh_fingerprints: true
ssh_fp_console_blacklist: ['ssh-dsa', 'ssh-rsa', 'ssh-ecdsa', 'ssh-ed25519']
ssh_key_console_blacklist: ['ssh-dsa', 'ssh-rsa', 'ssh-ecdsa', 'ssh-ed25519']
{% endif %}

write_files:
  - path: /etc/consul.d/agent-common.hcl
    permissions: '0640'
    content: |
      connect {
        enabled = true
      }

      ports {
        grpc = 8502
      }

      telemetry {
        disable_compat_1.9 = true
      }
  - path: /srv/consul/service-template.json
    permissions: '0640'
    content: |
      {
        "service": {
          "connect": {
            "sidecar_service": {
              "proxy": {
                "mode": "transparent",
                "transparent_proxy": {
                  "dialed_directly": true
                }
              }
            }
          }
        }
      }
  - path: /usr/local/bin/consul-redirect-traffic
    permissions: '0755'
    content: |
      #!/usr/bin/env bash

      # This is a small wrapper around `consul connect redirect-traffic` which
      # Determines the user ID for the `consul` process and `envoy` sidecar
      # prior to executing the command to install the redirect rules.
      #
      # Syntax is: consul-redirect-traffic <service name>

      # Exit upon receiving any errors
      set -o errexit

      # Obtain user IDs for consul and envoy
      CONSUL_UID=$(id --user consul)
      PROXY_UID=$(id --user envoy)

      # Redirect DNS traffic to Consul using iptables if systemd version < 246
      SYSTEMD_VERSION=$(systemd --version | awk 'NR==1 { print $2 }')

      if [[ ${SYSTEMD_VERSION} < 246 ]]; then
        iptables --table nat --append OUTPUT --destination localhost --proto udp --match udp --dport 53 --jump REDIRECT --to-ports 8600
        iptables --table nat --append OUTPUT --destination localhost --proto tcp --match tcp --dport 53 --jump REDIRECT --to-ports 8600
      fi

      # Define port exclusions
      SSH_PORT=22

      /usr/bin/consul connect redirect-traffic \
        -proxy-id="${1}-sidecar-proxy" \
        -proxy-uid=${PROXY_UID} \
        -exclude-uid=${CONSUL_UID} \
        -exclude-inbound-port=${SSH_PORT}

  - path: /usr/local/bin/consul-cleanup-iptables
    permissions: '0755'
    content: |
      #!/usr/bin/env bash

      # This is a small helper script to clean up iptables rules installed by
      # Consul when the proxy stops or restarts.
      #
      # Syntax is: consul-cleanup-iptables

      # Exit upon receiving any errors
      set -o errexit

      # Remove rules
      iptables --table nat --flush

      # Delete empty chains
      declare -a consul_chains=("INBOUND" "IN_REDIRECT" "OUTPUT" "REDIRECT")

      for i in "${consul_chains[@]}"
      do
        iptables --table nat --delete-chain CONSUL_PROXY_${i}
      done

  - path: /etc/systemd/resolved.conf.d/consul.conf
    permissions: '0644'
    content: |
      [Resolve]
      DNS=127.0.0.1
      Domains=~consul

  - path: /etc/systemd/system/envoy@.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Consul service mesh Envoy proxy for service %i
      After=network.target consul.service
      Requires=consul.service

      [Service]
      Type=simple
      User=envoy
      Group=envoy
      ExecStartPre=+/usr/local/bin/consul-redirect-traffic %i
      ExecStart=/usr/bin/consul connect envoy -sidecar-for=%i
      ExecStopPost=+/usr/local/bin/consul-cleanup-iptables
      Restart=on-failure
      RestartSec=5

      [Install]
      WantedBy=multi-user.target

runcmd:
  - systemctl daemon-reload
